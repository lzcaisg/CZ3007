// package the generated Java class lives in; no need to change this
%package "parser";

// name of the generated Java class; no need to change this
%class "Parser";

// no need to change this either
%embed {:
	// turn off automated error recovery
	@Override
	protected void recoverFromError(Symbol token, TokenStream in) throws java.io.IOException, Exception {
		super.recoverFromError(new Symbol(0), in);
	}
:};

// the list of all terminals; no need to change this
%terminals MODULE, INT, VOID, IF, ELSE, WHILE, RETURN, BREAK, BOOLEAN, PUBLIC, TRUE, FALSE,
           INT_LITERAL, STRING_LITERAL, ID, TYPE, IMPORT,
           PLUS, MINUS, TIMES, DIV, MOD, EQEQ, NEQ, LEQ, GEQ, LT, GT,
           LBRACKET, RPAREN, COMMA, RCURLY, LCURLY, SEMICOLON, RBRACKET, LPAREN, EQL;
           
// declaration of start symbol; no need to change this
%goal Module;

// temporary declaration, you can remove this once you have written all other rules
%goal Dummy;

/* TODO: Flesh out the rule for Module, and add rules for other nonterminals. Here is an example
         of a rule you may want to add:
         
   Accessibility = PUBLIC
		  |
		  ;
*/



/************************ MY RULES STARTS HERE!!! ************************

/* 1. ================================= 
A module consists of the keyword module, followed by an identifier (which is the module’s
name), followed by an opening curly brace, followed by imports, followed by declarations, followed by a
closing curly brace.
=======================================*/

Module = MODULE ID LCURLY Imports Declarations RCURLY;


/* 2. ================================= 
A module’s imports (nonterminal Imports) specify what other modules this module will import. They
consist of zero or more import statements. An import statement (nonterminal Import) consists of the keyword
import, followed by an identifier, followed by a semicolon. The identifier is the name of a module to be
imported.
=======================================*/

Imports = Imports Import
		|
		;

Import = IMPORT ID SEMICOLON;


************************* MY RULES ENDS HERE!!! *************************/

/* Dummy rule to make the lexer compile. Remove this once you have written all other rules. */	  
Dummy = MODULE INT VOID IF ELSE WHILE RETURN BREAK BOOLEAN PUBLIC TRUE FALSE INT_LITERAL STRING_LITERAL ID TYPE IMPORT
           PLUS MINUS TIMES DIV MOD EQEQ NEQ LEQ GEQ LT GT LBRACKET RPAREN COMMA RCURLY LCURLY SEMICOLON RBRACKET LPAREN EQL;